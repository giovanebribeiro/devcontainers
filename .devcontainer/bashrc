# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !!!!!!!!!!!!!! DO NOT EDIT THIS FILE !!!!!!!!!!!!!!!!!!!!!!!!!!!
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
   *i*) ;;
     *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
   debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
   xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
   if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
   # We have color support; assume it's compliant with Ecma-48
   # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
   # a case would tend to support setf rather than setaf.)
   color_prompt=yes
   else
   color_prompt=
   fi
fi

if [ "$color_prompt" = yes ]; then
   PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
   PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
   PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
   ;;
*)
   ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
   test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

   test alias ls >/dev/null 2>&1 || alias ls='ls --color=auto'
   test alias dir >/dev/null 2>&1 || alias ls='dir --color=auto'
   test alias vdir >/dev/null 2>&1 || alias ls='vdir --color=auto'

   test alias grep >/dev/null 2>&1 || alias grep='grep --color=auto'
   test alias fgrep >/dev/null 2>&1 || alias fgrep='fgrep --color=auto'
   test alias egrep >/dev/null 2>&1 || alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Complements
# You may want to put all your additions into a separate file like
# ~/.my_bash_complements, instead of adding them here directly.
if [ -f /workspace/.devcontainer/my_bash_complements ]; then
   . /workspace/.devcontainer/my_bash_complements
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
 if [ -f /usr/share/bash-completion/bash_completion ]; then
   . /usr/share/bash-completion/bash_completion
 elif [ -f /etc/bash_completion ]; then
   . /etc/bash_completion
 fi
fi


aws_login() {
   aws sts get-caller-identity &> /dev/null
   EXIT_CODE="$?"
   if [ $EXIT_CODE != 0 ]; then
       aws sso login --sso-session=$AWS_SSO_SESSION_NAME
   fi
}

# bash theme - partly inspired by https://github.com/ohmyzsh/ohmyzsh/blob/master/themes/robbyrussell.zsh-theme
__bash_prompt() {
   local userpart='`export XIT=$? \
       && [ ! -z "${GITHUB_USER:-}" ] && echo -n "\[\033[0;32m\]@${GITHUB_USER:-} " || echo -n "\[\033[0;32m\]\u " \
       && [ "$XIT" -ne "0" ] && echo -n "\[\033[1;31m\]➜" || echo -n "\[\033[0m\]➜"`'
   local gitbranch='`\
       if [ "$(git config --get devcontainers-theme.hide-status 2>/dev/null)" != 1 ] && [ "$(git config --get codespaces-theme.hide-status 2>/dev/null)" != 1 ]; then \
           export BRANCH="$(git --no-optional-locks symbolic-ref --short HEAD 2>/dev/null || git --no-optional-locks rev-parse --short HEAD 2>/dev/null)"; \
           if [ "${BRANCH:-}" != "" ]; then \
               echo -n "\[\033[0;36m\](\[\033[1;31m\]${BRANCH:-}" \
               && if [ "$(git config --get devcontainers-theme.show-dirty 2>/dev/null)" = 1 ] && \
                   git --no-optional-locks ls-files --error-unmatch -m --directory --no-empty-directory -o --exclude-standard ":/*" > /dev/null 2>&1; then \
                       echo -n " \[\033[1;33m\]✗"; \
               fi \
               && echo -n "\[\033[0;36m\]) "; \
           fi; \
       fi`'
   local lightblue='\[\033[1;34m\]'
   local removecolor='\[\033[0m\]'
   PS1="${userpart} ${lightblue}\w ${gitbranch}${removecolor}\$ "
   unset -f __bash_prompt
}

#############
### ALIAS ###
#############
test alias .. >/dev/null 2>&1 || alias ..='cd ..'
test alias la >/dev/null 2>&1 || alias la='ls -la'
test alias ll >/dev/null 2>&1 || alias ll='ls -l'
test alias l >/dev/null 2>&1 || alias l='ls -CF'
test alias keygen >/dev/null 2>&1 || alias keygen='ssh-keygen -b 7168 -t rsa'
test alias myip >/dev/null 2>&1 || alias myip='curl ipinfo.io/ip'
test alias ps >/dev/null 2>&1 || alias ps='ps aux'
test alias aws-login >/dev/null 2>&1 || alias aws-login='aws_login'

###############
### EXPORTS ###
###############
if [ -f /workspace/.devcontainer/.env ]; then
    set -a && source /workspace/.devcontainer/.env && set +a
fi

__bash_prompt
export PROMPT_DIRTRIM=4
